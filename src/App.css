@font-face {
  font-family: 'Russo';
  src: url(/src/assets/fonts/RussoOne-Regular.ttf);
}

@import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');

:root{
  --grid: 48px;
  /* --------- COLORS --------- */
  --pop: hsl(215, 50%, 60%);
  --pop-alt: hsl(120, 75%, 60%);
  --lite: white;
  --faint: hsla(0,0%,0%,0.1);
  /* --------- FONTS --------- */
  --keyFont: 'Russo', sans-serif;
  --bodyFont: 'Odibee Sans', cursive;
  font-family: var(--bodyFont);
  font-size: 18px;
}

html {height: 100vh;}

body, #root, .App {height: 100%;}

*::selection {
  background-color: var(--faint);
}

.App {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  text-align: center;
}

::-webkit-scrollbar {
  display: none;
}

a, a:visited {
  text-decoration: none;
  color: inherit;
}

a:hover, a:focus {
  color: inherit;
  outline: none;
}

button {
  appearance: none;
  cursor: pointer;
  outline: none;
  background-color: transparent;
}

h1, h2, h3{
  font-family: var(--keyFont);
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

input {
  appearance: none;
  border: 2px solid hsla(0, 0%, 0%, 0.1);
}

header, footer {
  background-color: silver;
  padding: 1rem 2rem;
  color: var(--lite);
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 1px 2px var(--faint);
}

main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  /* min-height: 100vh; */
  justify-content: center;
  padding: 2rem;
}

/* --------- NAV --------- */
nav a {
  font-family: var(--keyFont);
  letter-spacing: 0.1em;
}

nav a:not(:last-of-type){
  margin-right: 1.5em;
}

/* --------- GRID --------- */
#crossword {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#cw-grid {
  margin: 0 auto;
  padding: 1rem;
  border: 2px solid var(--faint);
  border-radius: 10px;
}

#cw-grid.grid {
  display: grid;
  grid-gap: 4px;
  justify-content: center;
}

.cell {
  position: relative;
  /* display: none; */
  visibility: hidden;
}

.cell.crop {
  /* background-color: black; */
  display: none;
}

.cell.show {
  display: block;
  visibility: visible;
}

.cell-input {
  cursor: pointer;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--grid);
  height: var(--grid);
  background-color: transparent;
  caret-color: transparent;
  color: hsl(215, 50%, 60%);
  font-family: var(--keyFont);
  font-size: large;
  /* font-weight: 600; */
  text-align: center;
  text-transform: uppercase;
  line-height: 1em;
  outline-color: var(--pop);
  box-sizing: border-box;
  border-radius: 5px;
  z-index: 1;
}

.cell-input::placeholder {
  background-color: transparent;
  color: hsla(0, 0%, 0%, 0.1);
  font-weight: 600;
}

.cell-input::selection {
  background-color: transparent;
}

.cell-input.show::placeholder {
  color: hsl(240, 100%, 75%);
  opacity: 0.5;
  font-weight: 300;
}

.cell.assisted .cell-input {color: var(--pop-alt)}

.axis-box {
  --offset: -4px;
  content: '';
  position: absolute;
  display: block;
  top: var(--offset);
  bottom: var(--offset);
  left: var(--offset);
  right: var(--offset);
  box-sizing: border-box;
  /* border: 2px dashed cyan; */
  opacity: 0;
  transition: 0.2s ease;
  z-index: -1;
}

.axis-box.preview,
.axis-box.active {
  opacity: 1;
}

.axis-select {
  position: absolute;
  display: flex;
  align-items: center;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* border: 1px solid red; */
  box-sizing: border-box;
  transition: 0.1s ease-out;
  opacity: 0;
  z-index: -1;
}

.cell.junction:hover .axis-select{
  opacity: 1;
  z-index: 2;
}

.axis-select button {
  cursor: pointer;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 50%;
  /* background-color: hlsa(0,0%,0%,0.05); */
  background-color: transparent;
  font-size: 2rem;
  line-height: 1em;
  border: none;
  box-sizing: border-box;
  transition: 0.1s ease-out;
  z-index: 2;
}

.axis-select button:hover {
  z-index: 3;
}

.axis-select button::before,
.axis-select button::after {
  --offset: 2px;
  content: '';
  position: absolute;
  display: block;
  width: 25%;
  height: 100%;
  background-color: hsl(0,0%,90%);
  transition: 0.1s ease-out;
}

.axis-select button:hover::before,
.axis-select button:hover::after{
  background-color: var(--pop-alt);
}

.axis-select button::before {
  left: 0;
  clip-path: polygon(0 50%, 100% 100%, 60% 50%, 100% 0);
}

.axis-select button::after {
  right: 0;
  clip-path: polygon(0 0, 40% 50%, 0 100%, 100% 50%);
}

.axis-select button.select-down {
  transform: rotate(90deg);
}

/*  --------- DOWN (VERTICAL) --------- */

form#crossword .down .downBox {
  border-left: 3px solid var(--pop);
  border-right: 3px solid var(--pop);
}

form#crossword .down.top .downBox {
  border-top: 3px solid var(--pop);
  border-radius: 8px 8px 0 0;
}

form#crossword .down.bottom .downBox {
  border-bottom: 3px solid var(--pop);
  border-radius: 0 0 8px 8px;
}


/*  --------- ACROSS (HORIZONTAL) --------- */

form#crossword .across .acrossBox {
  border-top: 3px solid var(--pop);
  border-bottom: 3px solid var(--pop);
}

form#crossword .across.first .acrossBox {
  border-left: 3px solid var(--pop);
  border-radius: 8px 0 0 8px;
}

form#crossword .across.last .acrossBox {
  border-right: 3px solid var(--pop);
  border-radius: 0 8px 8px 0;
}

/*  --------- HINT CACHE --------- */
#hint-cache-wrap {
  display: flex;
  width: 75vw;
}

.hint-cache {
  counter-reset: hint;
  list-style-position: inside;
  list-style-type: none;
}

.hint-cache li {
  cursor: pointer;
  display: flex;
  margin: 0.5rem;
  padding: 0.5rem;
  text-align: left;
  border: 2px solid var(--faint);
  border-radius: 5px;
  box-sizing: border-box;
  transition: 0.1s ease-out;
}

.hint-cache li.active,
.hint-cache li:hover,
.hint-cache li.preview {
  border-color: var(--pop);
}

.hint-cache li::before {
  counter-increment: hint;
  content: counter(hint)'.';
  display: block;
  margin-right: 0.5rem;
  width: 2ch;
  color: silver;
  text-align: right;
  font-weight: 600;
  /* font-family: var(--bodyFont); */
  /* border: 1px solid red; */
  box-sizing: border-box;
}

/*  --------- BUTTON CACHE --------- */
#button-cache {
  display: flex;
  align-items: center;
  margin-block: 1rem;
}

#button-cache button {
  display: block;
  line-height: 1em;
  padding: 1em;
  color: var(--pop);
  font-family: var(--keyFont);
  font-size: large;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  border: 3px solid var(--pop);
  border-radius: 10px;
  transition: 0.1s ease-out
}

#button-cache button:hover {
  background-color: var(--pop);
  color: white;
}

#button-cache button:not(:last-of-type){
  margin-right: 1rem;
}

/*  ============ BUILD PAGE  ============ */
#build-page {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  /* align-items: center; */
  box-sizing: border-box;
}


/*  --------- NEW PUZZLE FORM  --------- */
#newPuzzleForm {
  display: flex;
  flex-direction: column;
  align-items: center;
  align-self: center;
  padding: 2rem;
  border: 3px solid var(--faint);
  border-radius: 20px;
  box-sizing: border-box;
}

#newPuzzleForm > *:not(:last-child){
  margin-bottom: 1rem;
}

#newPuzzleForm label h4,
#newPuzzleForm h4.label
 {
  margin: 0;
  margin-bottom: 0.5em;
  color: silver;
  font-family: var(--keyFont);
  font-size: small;
  font-weight: 300;
  letter-spacing: 0.1em; 
  /* text-align: left; */
  text-transform: uppercase;
}

#newPuzzleForm label h4::selection,
#newPuzzleForm h4.label::selection{
  background-color: transparent;
}

#newPuzzleForm input {
  color: var(--pop);
  outline-color: var(--pop);
}

#newPuzzleForm label input {
  padding: 1rem;
  text-align: center;
  border: 2.5px solid var(--faint);
  border-radius: 10px;
}

#newPuzzleForm label input[type='text'] {
  font-family: var(--keyFont);
  font-size: larger;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

#newPuzzleForm label input[type='text']::placeholder{
  color: var(--faint);
}

.newPuzzle-gridSize-wrap {
  display: flex;
  align-items: center;
}

.newPuzzle-gridSize-wrap > *:not(:last-child){
  margin-right: 1rem;
}

.newPuzzle-gridSize-wrap .num-input,
.newPuzzle-gridSize-link{
  cursor: pointer;
  box-sizing: border-box;
}

.newPuzzle-gridSize-wrap .num-input {
  --size: calc(var(--grid) * 1.5);
  width: var(--size);
  height: var(--size);
  /* color: silver; */
  caret-color: transparent;
  font-family: var(--keyFont);
  font-size: large;
}

.newPuzzle-gridSize-wrap .num-input::selection{
  background-color: transparent;
}

.newPuzzle-gridSize-wrap .num-input::-webkit-inner-spin-button,
.newPuzzle-gridSize-wrap .num-input::-webkit-outer-spin-button{
  -webkit-appearance: none;
  -moz-appearance: textfield;
  margin: 0;
}

.newPuzzle-gridSize-link {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--grid);
  height: var(--grid);
  color: silver;
  font-size: 2rem;
  border: 3px solid transparent;
  /* border: none; */
  border-radius: 50%;
  transition: 0.05s ease-out;
}

.linked .newPuzzle-gridSize-link {
  border-color: var(--faint)
}

/* .linked .newPuzzle-gridSize-link::before{
  --offset: -10px;
  content: '';
  position: absolute;
  display: block;
  left: var(--offset);
  right: var(--offset);
  height: 3px;
  background-color: silver;
  border-radius: 100px;
  box-sizing: border-box;
} */

#newPuzzleForm button[type='submit'] {
  padding: 1rem;
  color: silver;
  font-family: var(--keyFont);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  border: 2.5px solid var(--faint);
  border-radius: 10px;
  transition: 0.05s ease-out;
}

#newPuzzleForm button[type='submit']:hover {
  background-color: var(--pop);
  color: white;
  border-color: var(--pop);
}