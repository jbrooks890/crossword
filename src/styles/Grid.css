/* --------- GRID --------- */
#crossword {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 5rem;
}

#cw-grid-wrap {
  position: relative;
  box-sizing: border-box;
}

#cw-grid-wrap.mini {
  overflow: hidden;
}

#cw-grid-wrap.mini.viewing-hints > :not(#hint-cache-wrap) {
  opacity: 0;
  z-index: -1;
}

#puzzle-window {
  --size: 80vh;
  position: relative;
  /* width: var(--size); */
  /* height: var(--size); */
  box-sizing: border-box;
  transition: 0.2s ease-in-out;
  overflow: hidden;
  /* border: 1px solid red; */
}

#puzzle-window.flex {
  align-items: flex-start;
}

#cw-grid {
  /* --size: inherit;
  width: var(--size);
  height: var(--size); */
  /* justify-self: center;
  align-self: center; */
  flex-grow: 1;
  flex-shrink: 0;
  margin: 0 auto;
  padding: 1rem;
  border: 2px solid var(--faint);
  border-radius: 10px;
  box-sizing: border-box;
  overflow: scroll;
  transition: .2s ease-in-out;
}

#cw-grid.grid {
  display: grid;
  grid-gap: 4px;
  place-content: center;
}

h1.puzzle-title {
  cursor: default;
  position: relative;
  margin-block: 0.5em;
  padding: 0.5em;
  color: var(--mid);
  line-height: 1em;
  outline: 2px solid transparent;
  border-radius: 5px;
}

h1.puzzle-title.editable {
  cursor: pointer;
  transition: 0.1s ease-out;
}

h1.puzzle-title.editable:hover {
  outline-color: var(--faint);
}

h1.puzzle-title.editable:hover::after {
  content: 'Edit';
  position: absolute;
  display: block;
  left: 50%;
  bottom: 0;
  margin: 0;
  padding: 0.5em;
  color: var(--mid);
  background-color: var(--lite);
  font-family: var(--keyFont);
  font-size: small;
  font-weight: 300;
  line-height: 1em;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  transform: translate(-50%,50%)
}

.cell {
  position: relative;
  visibility: hidden;
}

/* .cell.junction:hover {
  background-color: var(--mid);
} */

#cw-grid.preview .cell-input {
  color: transparent;
  transition: 0.1s ease-out;
}

#cw-grid.preview .cell-input:hover {
  color: inherit;
}

.cell.crop {
  display: none;
}

.cell.show,
.cell.build:not(.preview .cell) {
  display: block;
  visibility: visible;
}

.cell.build .cell-input::before{
  content: '';
  position: absolute;
  display: block;
  inset: -2px
}

.cell.build.edit-across .cell-input:focus{
  background-color: #ff000030
}

.cell.build.edit-down .cell-input:focus{
  background-color: #00ffe530
}

.cell.build.edit-across .cell-input:focus::before {
  --border: 2px solid var(--pop-alt);
  border-top: var(--border);
  border-bottom: var(--border);
}

.cell.build.edit-down .cell-input:focus::before {
  --border: 2px solid var(--pop-alt);
  border-left: var(--border);
  border-right: var(--border);
}

.cell.drop-preview .cell-input {
  border-color: var(--pop);
}

.cell.drop-preview .cell-input::placeholder{
  color: var(--pop);
}

.cell-input {
  cursor: pointer;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: transparent;
  caret-color: transparent;
  color: var(--mid);
  font-family: var(--keyFont);
  font-size: large;
  text-align: center;
  text-transform: uppercase;
  line-height: 1em;
  outline-color: var(--pop);
  outline: none;
  border-width: 2.5px;
  box-sizing: border-box;
  border-radius: 5px;
  z-index: 1;
}

.cell-input:focus{
  border-color: var(--pop);
}

.cell-input::placeholder {
  background-color: transparent;
  color: var(--faint);
  font-weight: 300;
}

.cell-input::selection {
  background-color: transparent;
}

.cell-input.show::placeholder {
  color: var(--pop);
  opacity: 0.5;
  font-weight: 300;
}

.cell.assisted .cell-input {color: var(--pop-alt)}

.cell.build.member:not(.preview .cell) .cell-input {
  background-color: var(--mid);
  color: var(--lite);
  border-color: transparent;
}

.axis-box {
  content: '';
  position: absolute;
  display: block;
  inset: -4px;
  box-sizing: border-box;
  opacity: 0;
  transition: 0.2s ease;
  z-index: -1;
}

.axis-box.preview,
.axis-box.active {
  opacity: 1;
}

.axis-select {
  position: absolute;
  display: flex;
  align-items: center;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-sizing: border-box;
  transition: 0.1s ease-out;
  opacity: 0;
  z-index: -1;
}

.cell.junction:hover .axis-select{
  opacity: 1;
  z-index: 2;
}

.axis-select button {
  cursor: pointer;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 50%;
  background-color: transparent;
  font-size: 2rem;
  line-height: 1em;
  border: none;
  box-sizing: border-box;
  transition: 0.1s ease-out;
  z-index: 2;
}

.axis-select button:hover {
  z-index: 3;
}

.axis-select button::before,
.axis-select button::after {
  --offset: 2px;
  content: '';
  position: absolute;
  display: block;
  width: 25%;
  height: 100%;
  background-color: var(--faint);
  transition: 0.1s ease-out;
}

.axis-select button:hover::before,
.axis-select button:hover::after{
  background-color: var(--pop);
  filter: brightness(1.5);
}

.axis-select button::before {
  left: 0;
  clip-path: polygon(0 50%, 100% 100%, 60% 50%, 100% 0);
}

.axis-select button::after {
  right: 0;
  clip-path: polygon(0 0, 40% 50%, 0 100%, 100% 50%);
}

.axis-select button.select-down {
  transform: rotate(90deg);
}

 /* --------- DOWN (VERTICAL) --------- */

form#crossword .down .down-box {
  border-left: 3px solid var(--mid);
  border-right: 3px solid var(--mid);
}

form#crossword .down.top .down-box {
  border-top: 3px solid var(--mid);
  border-radius: 8px 8px 0 0;
}

form#crossword .down.bottom .down-box {
  border-bottom: 3px solid var(--mid);
  border-radius: 0 0 8px 8px;
}


 /* --------- ACROSS (HORIZONTAL) --------- */

form#crossword .across .across-box {
  border-top: 3px solid var(--mid);
  border-bottom: 3px solid var(--mid);
}

form#crossword .across.first .across-box {
  border-left: 3px solid var(--mid);
  border-radius: 8px 0 0 8px;
}

form#crossword .across.last .across-box {
  border-right: 3px solid var(--mid);
  border-radius: 0 8px 8px 0;
}

/* ================================= *\
|| HOVER
\* ================================= */

@media (hover:hover){
  .cell.build:hover .cell-input {
    border-color: var(--mid);
  }
}

/* ================================= *\
|| MOBILE
\* ================================= */

@media only screen and (max-width:480px){

  #crossword {
    overflow: hidden;
    padding-inline: 1rem;
    box-sizing: border-box;
    align-items: stretch;
  }

  #cw-grid-wrap {
    width: auto;
    box-sizing: border-box;
    /* overflow: hidden; */
  }

  #puzzle-window::before {
    content: "";
    display: block;
    width: 100%;
    padding-bottom: 100%;
  }

  #puzzle-window #cw-grid.mini {
    position: absolute;
    inset: 0;
    width: auto;
    height: auto;
  }
}

/* <><><><><><><><><><><><> *\
-------- MINI GRID --------
\* <><><><><><><><><><><><> */

:root{
  --miniGrid-cells: 25%;
}

#cw-grid.mini {
  --size: 95vw;
  gap: 0;
  width: var(--size);
  height: var(--size);
  box-sizing: border-box;
}

#cw-grid.mini .cell {
  background-color: var(--dark);
  border: 5px solid transparent;
}

#cw-grid.mini .cell.user-entry {
  background-color: var(--mid);
}
#cw-grid.mini .cell.assisted {
  background-color: var(--pop-alt);
}

#cw-grid.mini .cell.active{
  background-color: var(--pop);
}

#cw-grid.mini .axis-box,
#cw-grid.mini .axis-select {
  display: none;
}

#cw-grid.mini .cell-input {
  display: none;
  color: transparent;
  border-color: transparent;
  border-radius: 0;
}

#cw-grid.mini .cell.top:not(.junction) {
  border-top-left-radius: var(--miniGrid-cells);
  border-top-right-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.bottom:not(.junction) {
  border-bottom-left-radius: var(--miniGrid-cells);
  border-bottom-right-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.first:not(.junction) {
  border-top-left-radius: var(--miniGrid-cells);
  border-bottom-left-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.last:not(.junction) {
  border-top-right-radius: var(--miniGrid-cells);
  border-bottom-right-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.top.first {
  border-top-left-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.bottom.first {
  border-bottom-left-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.top.last {
  border-top-right-radius: var(--miniGrid-cells);
}

#cw-grid.mini .cell.bottom.last {
  border-bottom-right-radius: var(--miniGrid-cells);
}