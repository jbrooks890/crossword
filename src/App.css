@font-face {
  font-family: 'Russo';
  src: url(/src/assets/fonts/RussoOne-Regular.ttf);
}

@import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');

:root{
  --grid: 48px;
  /* --------- COLORS --------- */
  --pop: hsl(215, 35%, 50%);
  /* --pop-alt: hsl(120, 75%, 60%); */
  --pop-alt: hsl(322, 60%, 60%);
  --lite: white;
  --faint: hsla(0,0%,0%,0.1);
  /* --------- FONTS --------- */
  --keyFont: 'Russo', sans-serif;
  --bodyFont: 'Odibee Sans', cursive;
  --fontSize: 18px;
  font-family: var(--bodyFont);
  font-size: var(--fontSize);
  /* --------- BORDER --------- */
}

html {height: 100vh;}

body, #root, .App {height: 100%;}

body {
  color: var(--pop);
}

*::selection {
  background-color: var(--faint);
}

.App {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  text-align: center;
}

::-webkit-scrollbar {
  display: none;
}

a, a:visited {
  text-decoration: none;
  color: inherit;
}

a:hover, a:focus {
  color: inherit;
  outline: none;
}

button {
  appearance: none;
  cursor: pointer;
  outline: none;
  background-color: transparent;
}

h1, h2, h3{
  font-family: var(--keyFont);
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

input {
  appearance: none;
  border: 2px solid hsla(0, 0%, 0%, 0.1);
}

header, footer {
  background-color: silver;
  padding: 1rem 2rem;
  color: var(--lite);
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 1px 2px var(--faint);
}

header h2#site-logo {
  --size: calc(var(--grid)* 3);
  margin: 0;
  width: var(--size)
}

header h2#site-logo svg {
  width: 100%;
  /* height: 100%; */
}

header h2#site-logo svg .border {
  fill: white;
  /* display: none; */
}
header h2#site-logo svg .inner {
  fill: silver;
}

main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  /* min-height: 100vh; */
  justify-content: center;
  padding: 2rem;
}

/* --------- NAV --------- */
nav a {
  font-family: var(--keyFont);
  letter-spacing: 0.1em;
}

nav a:not(:last-of-type){
  margin-right: 1.5em;
}

/* --------- HOME PAGE --------- */

#home-page {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* padding-bottom: 2rem; */
}


h1.home-page-logo {
  width: calc(var(--grid) * 8);
}

#xword-full-logo {
  width: 100%;
  height: 100%;
}

#xword-full-logo .outline {
  fill: var(--pop);
}

#xword-full-logo .letters *{
  fill: white;
}

#game-list {
  list-style-type: none;
  padding-left: 0;
  /* border: 1px solid red; */
}

#game-list a {
  display: block;
  margin-bottom: 2rem;
}

/* #game-list a:not(:last-of-type) {
  margin-bottom: 2rem;
} */

#game-list .puzzle-list-item {
  padding: 1rem 2rem;
  border: 2px solid var(--faint);
  border-radius: 10px;
  box-sizing: border-box;
}

#game-list .puzzle-list-item h3 {
  font-family: var(--keyFont);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

/* --------- HINT BOX --------- */

#hint-box-wrap {
  position: relative;
  align-self: center;
  width: calc(var(--grid)*15);
  margin-bottom: 1rem;
  border-radius: 10px;
  box-sizing: border-box;
}

#hint-box, #hint-box::before{
  cursor: pointer;
  padding: 1rem;
  border: 2px solid var(--faint);
  border-radius: 10px;
  box-sizing: border-box;
  transition: 0.1s ease-out;
}

#hint-box {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

#hint-box-wrap.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 1em;
  /* margin-bottom: 75%; */
  background-color: white;
  box-shadow: 0 2px 5px hsla(0, 0%, 0%, 0.05);
  z-index: 10;
}

#hint-box::selection {
  /* background-color: hsla(0, 0%, 0%, 0.025); */
  background-color: transparent;
}

#hint-box:hover {
  color: transparent;
}

#hint-box::before{
  content: attr(data-hint-full);
  position: absolute;
  top: 0;
  left: 0;
  right:0;
  width: 100%;
  color: var(--pop);
  /* height: 100%; */
  background-color: white;
  white-space: normal;
  opacity: 0;
}

#hint-box:hover::before {
  opacity: 1;
}

/* --------- ANSWER INPUT --------- */

#answer-input {
  position: -webkit-sticky;
  position: sticky;
  display: none;
  background-color: white;
  bottom: 2rem;
  align-self: center;
  margin-top: 1rem;
  padding: 1em 2em;
  border: 2px solid var(--faint);
  border-radius: 10px;
  box-sizing: border-box;
  opacity: 0;
  z-index: -1;
}

#answer-input.active {
  display: block;
  opacity: 1;
  z-index: 11;
}

.answer-input-hint {
  margin-bottom: 0.5em;
}

/* --------- GRID --------- */
#crossword {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* border: 1px solid red; */
}

#cw-grid-wrap {
  position: relative;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}

#cw-grid {
  margin: 0 auto;
  padding: 1rem;
  border: 2px solid var(--faint);
  border-radius: 10px;
}

#cw-grid.grid {
  display: grid;
  grid-gap: 4px;
  justify-content: center;
}

.cell {
  position: relative;
  visibility: hidden;
}

.cell.crop {
  /* background-color: black; */
  display: none;
}

.cell.show,
.cell.build {
  display: block;
  visibility: visible;
}

.cell.build .cell-input::before{
  --offset: -2px;
  content: '';
  position: absolute;
  display: block;
  top: var(--offset);
  bottom: var(--offset);
  left: var(--offset);
  right: var(--offset);
}

.cell.build.edit-across .cell-input:focus{
  background-color: #ff000030
}

.cell.build.edit-down .cell-input:focus{
  background-color: #00ffe530
}

.cell.build.edit-across .cell-input:focus::before {
  --border: 2px solid var(--pop-alt);
  border-top: var(--border);
  border-bottom: var(--border);
}

.cell.build.edit-down .cell-input:focus::before {
  --border: 2px solid var(--pop-alt);
  border-left: var(--border);
  border-right: var(--border);
}

.cell-input {
  cursor: pointer;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--grid);
  height: var(--grid);
  background-color: transparent;
  caret-color: transparent;
  color: hsl(215, 50%, 60%);
  font-family: var(--keyFont);
  font-size: large;
  /* font-weight: 600; */
  text-align: center;
  text-transform: uppercase;
  line-height: 1em;
  outline-color: var(--pop);
  box-sizing: border-box;
  border-radius: 5px;
  z-index: 1;
}

.cell-input::placeholder {
  background-color: transparent;
  color: hsla(0, 0%, 0%, 0.1);
  font-weight: 300;
}

.cell-input::selection {
  background-color: transparent;
}

.cell-input.show::placeholder {
  color: hsl(240, 100%, 75%);
  opacity: 0.5;
  font-weight: 300;
}

.cell.assisted .cell-input {color: var(--pop-alt)}

.axis-box {
  --offset: -4px;
  content: '';
  position: absolute;
  display: block;
  top: var(--offset);
  bottom: var(--offset);
  left: var(--offset);
  right: var(--offset);
  box-sizing: border-box;
  opacity: 0;
  transition: 0.2s ease;
  z-index: -1;
}

.axis-box.preview,
.axis-box.active {
  opacity: 1;
}

.axis-select {
  position: absolute;
  display: flex;
  align-items: center;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-sizing: border-box;
  transition: 0.1s ease-out;
  opacity: 0;
  z-index: -1;
}

.cell.junction:hover .axis-select{
  opacity: 1;
  z-index: 2;
}

.axis-select button {
  cursor: pointer;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 50%;
  background-color: transparent;
  font-size: 2rem;
  line-height: 1em;
  border: none;
  box-sizing: border-box;
  transition: 0.1s ease-out;
  z-index: 2;
}

.axis-select button:hover {
  z-index: 3;
}

.axis-select button::before,
.axis-select button::after {
  --offset: 2px;
  content: '';
  position: absolute;
  display: block;
  width: 25%;
  height: 100%;
  background-color: hsl(0,0%,90%);
  transition: 0.1s ease-out;
}

.axis-select button:hover::before,
.axis-select button:hover::after{
  background-color: var(--pop-alt);
}

.axis-select button::before {
  left: 0;
  clip-path: polygon(0 50%, 100% 100%, 60% 50%, 100% 0);
}

.axis-select button::after {
  right: 0;
  clip-path: polygon(0 0, 40% 50%, 0 100%, 100% 50%);
}

.axis-select button.select-down {
  transform: rotate(90deg);
}

/*  --------- DOWN (VERTICAL) --------- */

form#crossword .down .downBox {
  border-left: 3px solid var(--pop);
  border-right: 3px solid var(--pop);
}

form#crossword .down.top .downBox {
  border-top: 3px solid var(--pop);
  border-radius: 8px 8px 0 0;
}

form#crossword .down.bottom .downBox {
  border-bottom: 3px solid var(--pop);
  border-radius: 0 0 8px 8px;
}


/*  --------- ACROSS (HORIZONTAL) --------- */

form#crossword .across .acrossBox {
  border-top: 3px solid var(--pop);
  border-bottom: 3px solid var(--pop);
}

form#crossword .across.first .acrossBox {
  border-left: 3px solid var(--pop);
  border-radius: 8px 0 0 8px;
}

form#crossword .across.last .acrossBox {
  border-right: 3px solid var(--pop);
  border-radius: 0 8px 8px 0;
}

/* form#crossword .axis-box.preview {
  border-color: var(--pop-alt) !important;
} */

/*  --------- HINT CACHE --------- */
#hint-cache-wrap {
  display: flex;
  width: 75vw;
  justify-content: center;
  /* border: 1px solid blue; */
}

.hint-cache {
  counter-reset: hint;
  list-style-position: inside;
  list-style-type: none;
  padding-left: 0;
  padding: 1rem;
}

.hint-cache li {
  cursor: pointer;
  display: flex;
  margin: 0.5rem;
  padding: 0.5rem;
  text-align: left;
  border: 2px solid var(--faint);
  border-radius: 5px;
  box-sizing: border-box;
  transition: 0.1s ease-out;
}

.hint-cache li.active,
.hint-cache li:hover,
.hint-cache li.preview {
  border-color: var(--pop);
}

.hint-cache li::before {
  counter-increment: hint;
  content: counter(hint)'.';
  display: block;
  margin-right: 0.5rem;
  width: 2ch;
  color: silver;
  text-align: right;
  font-weight: 600;
  /* font-family: var(--bodyFont); */
  /* border: 1px solid red; */
  box-sizing: border-box;
}

/*  --------- HINT INPUT --------- */
#hint-input {
  display: none;
  width: 100%;
  max-width: 560px;
  opacity: 0;
  transition: 0.1s ease-out;
  /* border: 1px solid blue; */
}

#hint-input.active {
  display: initial;
  opacity: 1;
}

.hint-input-list {
  counter-reset: hint-input;
  padding-left: 0;
  /* list-style-type: none; */
  /* list-style-position: inside; */
}


.hint-input-list h4 {
  position: relative;
  margin: 0;
  margin-bottom: 0.5em;
}

li.hint-input-entry {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
  box-sizing: border-box;
  /* border: 1px solid red; */
}

.hint-input-entry::after {
  content: attr(data-char-count);
  position: absolute;
  display: block;
  bottom: 0;
  right: 0;
  padding: 0.5em;
  color: var(--faint);
  font-family: var(--keyFont);
  font-size: small;
  font-weight: normal;
  letter-spacing: 0.05em;
  z-index: 1;
}

.hint-input-entry h4{
  display: flex;
  margin: 0;
  margin-bottom: 0.5em;
  font-family: var(--keyFont);
  font-weight: 300;
  letter-spacing: 0.1em;
  line-height: 1em;
  text-align: left;
  /* text-indent: -2.5ch; */
}

li.hint-input-entry h4::before {
  counter-increment: hint-input;
  content: counter(hint-input)'.';
  align-self: flex-end;
  margin-right: 0.5em;
  color: silver;
  font-size: small;
  /* width: 2.5ch; */
  box-sizing: border-box;
  /* border: 1px solid red; */
  /* display: block; */
}

.hint-input-entry textarea {
  appearance: none;
  padding: 1em;
  color: var(--pop);
  caret-color: var(--faint);
  font-family: inherit;
  font-size: 0.9rem;
  outline: none;
  border: 2px solid var(--faint);
  border-radius: 5px;
  overflow-y: auto !important;
}

.hint-input-entry textarea::placeholder{
  color: silver;
  font-style: italic;
}

.hint-input-entry textarea::-webkit-resizer{
  display: none;
}

/*  --------- BUTTON CACHE --------- */
#button-cache {
  display: flex;
  align-items: center;
  margin-block: 1rem;
}

#button-cache button {
  display: block;
  line-height: 1em;
  padding: 1em;
  color: var(--pop);
  font-family: var(--keyFont);
  font-size: large;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  border: 3px solid var(--pop);
  border-radius: 10px;
  transition: 0.1s ease-out
}

#button-cache button:hover {
  background-color: var(--pop);
  color: white;
}

#button-cache button:not(:last-of-type){
  margin-right: 1rem;
}

/*  --------- COMMENTS SECTION --------- */

#comment-section{
  position: relative;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  width: 50%;
}

#comment-section button {
  line-height: 1em;
  padding: 0.5em 1.5em;
  background-color: var(--pop);
  color: white;
  border: none;
  border-radius: 2px;
}

#comment-section ::-webkit-resizer {
  -webkit-appearance: none;
  display: none;
}

form#new-comment {
  /* align-self: center; */
  display: flex;
  flex-direction: column;
  /* margin: 0 2rem; */
  padding: 1em;
  border: 2px solid var(--faint);
  border-radius: 10px;
}

.comment-input-box {
  display: flex;
  flex-direction: column;
  margin-bottom: 1em;
}

.comment-input-box * {
  font-size: 1rem;
  color: var(--pop);
  caret-color: var(--faint);
}

.comment-input-box input {
  margin-bottom: 0.5em;
  font-family: var(--keyFont);
  outline: none;
  border: none;
}

.comment-input-box ::placeholder {
  color: hsl(0,0%,75%);
}

.comment-input-box textarea{
  appearance: none;
  background-color: transparent;
  font-family: inherit;
  outline: none;
  border: none;
}

form#new-comment button {
  align-self: flex-end;
}

#comment-list {
  display: flex;
  flex-direction: column-reverse;
  padding-left: 0;
}

#comment-list li.comment-entry {
  list-style-type: none;
  background-color: hsl(0,0%,95%);
  border: 2px solid hsl(0, 0%, 95%);
  /* box-shadow: 0 2px 2px var(--faint); */
  /* margin-bottom: 1rem; */
  margin: 0 2rem 1rem;
  padding: 1em;
  text-align: left;
  border-radius: 10px;
  box-sizing: border-box;
}

.comment-entry h3 {
  margin: 0;
}

.comment-button-cache {
  display: flex;
  justify-content: flex-end;
}

/* .comment-button-cache button{
  line-height: 1em;
  padding: 0.5em 1.5em;
  background-color: hsl(0,0%,90%);
  border: none;
  border-radius: 2px;
} */

.comment-button-cache button:not(:last-of-type){
  margin-right: 0.5em;
}

.edit-comment {
  display: flex;
  flex-direction: column;
}

.edit-comment textarea {
  padding: 1em;
  font-size: 1rem;
  font-family: inherit;
    color: var(--pop);
    caret-color: var(--faint);
  border: none;
  outline: none;
  margin-block: 1rem;
  border-radius: 2px;
}

.edit-comment button {
  align-self: flex-end;
}

/*  ============ BUILD PAGE  ============ */
#build-page {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  /* border: 1px solid red; */
}

#build-nav {
  display: flex;
  padding-left: 0;
  list-style-type: none;
}

#build-nav li.build-nav-btn {
  cursor: pointer;
  padding: 0.5em 1.25em;
  color: silver;
  font-family: var(--keyFont);
  font-weight: normal;
  font-size: smaller;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  line-height: 1em;
  box-sizing: border-box;
  border: 2.5px solid var(--faint);
  border-radius: 5px;
  transition: 0.1s ease-out;
}

#build-nav li:not(:last-of-type){margin-right: 0.5rem}

#build-nav li:hover,
#build-nav li:focus{
  background-color: silver;
  color: white;
  border-color: silver;
}

#build-nav li.build-nav-btn.active {
  background-color: var(--pop);
  border-color: var(--pop);
  color: white;
}

/*  --------- NEW PUZZLE FORM  --------- */
#newPuzzleForm {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* align-self: center; */
  padding: 2rem;
  border: 3px solid var(--faint);
  border-radius: 20px;
  box-sizing: border-box;
}

#newPuzzleForm > *:not(:last-child){
  margin-bottom: 1rem;
}

#newPuzzleForm label h4,
#newPuzzleForm h4.label
 {
  margin: 0;
  margin-bottom: 0.5em;
  color: silver;
  font-family: var(--keyFont);
  font-size: small;
  font-weight: 300;
  letter-spacing: 0.1em; 
  /* text-align: left; */
  text-transform: uppercase;
}

#newPuzzleForm label h4::selection,
#newPuzzleForm h4.label::selection{
  background-color: transparent;
}

#newPuzzleForm input {
  color: var(--pop);
  outline-color: var(--pop);
}

#newPuzzleForm label input {
  text-align: center;
  border: 2.5px solid var(--faint);
  border-radius: 10px;
}

#newPuzzleForm label input[type='text'] {
  padding: 1rem;
  font-family: var(--keyFont);
  font-size: larger;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

#newPuzzleForm label input[type='text']::placeholder{
  color: var(--faint);
}

.newPuzzle-gridSize-wrap {
  display: flex;
  align-items: center;
}

.newPuzzle-gridSize-wrap > *:not(:last-child){
  margin-right: 1rem;
}

.newPuzzle-gridSize-wrap .num-input,
.newPuzzle-gridSize-link{
  cursor: pointer;
  box-sizing: border-box;
}

.newPuzzle-gridSize-wrap .num-input {
  --size: calc(var(--grid) * 1.5);
  width: var(--size);
  height: var(--size);
  /* color: silver; */
  caret-color: transparent;
  font-family: var(--keyFont);
  font-size: large;
}

.newPuzzle-gridSize-wrap .num-input::selection{
  background-color: transparent;
}

.newPuzzle-gridSize-wrap .num-input::-webkit-inner-spin-button,
.newPuzzle-gridSize-wrap .num-input::-webkit-outer-spin-button{
  -webkit-appearance: none;
  -moz-appearance: textfield;
  margin: 0;
}

.newPuzzle-gridSize-link {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--grid);
  height: var(--grid);
  color: silver;
  font-size: 2rem;
  border: 3px solid transparent;
  /* border: none; */
  border-radius: 50%;
  transition: 0.05s ease-out;
  box-sizing: border-box;
}

.linked .newPuzzle-gridSize-link {
  border-color: var(--faint)
}

/* .linked .newPuzzle-gridSize-link::before{
  --offset: -10px;
  content: '';
  position: absolute;
  display: block;
  left: var(--offset);
  right: var(--offset);
  height: 3px;
  background-color: silver;
  border-radius: 100px;
  box-sizing: border-box;
} */

#newPuzzleForm button[type='submit'] {
  padding: 1rem;
  color: silver;
  font-family: var(--keyFont);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  border: 2.5px solid var(--faint);
  border-radius: 10px;
  transition: 0.05s ease-out;
}

#newPuzzleForm button[type='submit']:hover {
  background-color: var(--pop);
  color: white;
  border-color: var(--pop);
}

/*  ============ FOOTER  ============ */

.jb-logo {
  --size: calc(var(--grid) * 4.5);
  width: var(--size);
  /* height: var(--size); */
  filter: drop-shadow(0 2px 0 hsla(0, 0%, 0%, 0.05));
  fill: white;
}

.sm-cache {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.sm-list {
  display: flex;
}

.sm-list a {
  --size: calc(var(--grid)*0.6);
  cursor: pointer;
  width: var(--size);
  height: var(--size);
  box-sizing: border-box;
  /* border: 2px solid white; */
}

.sm-list a:not(:last-of-type){
  margin-right: 1.5rem;
}

svg.sm-icon {
  fill: hsl(0,0%,95%);
  width: 100%;
  height: 100%;
  transition: 0.1s ease-out;
}
svg.sm-icon:hover {
  fill: white;
  transform: scale(1.1);
  filter: drop-shadow(0 2px 0 hsla(0, 0%, 0%, 0.1))
}

.sm-handler {
  cursor: pointer;
  margin-block: 0.5em;
  font-family: var(--keyFont);
  letter-spacing: 0.1em;
  transform: translateY(0.25em);
  transition: 0.1s ease-out;
  opacity: 0;
}

.sm-handler::before {
  content: '@';
  display: inline-block;
  margin-right: 2px;
  opacity: 0.5;
}

.sm-list:hover + .sm-handler{
  opacity: 1;
  transform: translateY(0);
}

footer span.copyright {
  cursor: default;
  color: hsl(0,0%,95%);
}

footer span.copyright::selection{
  background-color: transparent;
}
